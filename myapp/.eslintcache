[{"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/index.js":"1","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/reportWebVitals.js":"2","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/routes/Routes.js":"3","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/apis/firebase.js":"4","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/App.js":"5","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Home.js":"6","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/RatingPage.js":"7","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/NotFound.js":"8","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/Messages.js":"9","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/navBar.js":"10","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/Loading.js":"11","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Firebase_Login.js":"12","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Menu.js":"13","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/MessageSlider.js":"14","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/RateStaring.js":"15","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/MessageForm.js":"16","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/singOut.js":"17","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/RateType.js":"18","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/RatingPage2.js":"19","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Acceptance.js":"20","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/FeedBack.js":"21","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/DemogForm.js":"22"},{"size":593,"mtime":1620654218577,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1620654218577,"results":"25","hashOfConfig":"24"},{"size":916,"mtime":1623504561264,"results":"26","hashOfConfig":"24"},{"size":563,"mtime":1620654218573,"results":"27","hashOfConfig":"24"},{"size":790,"mtime":1620654218573,"results":"28","hashOfConfig":"24"},{"size":525,"mtime":1623504392063,"results":"29","hashOfConfig":"24"},{"size":7457,"mtime":1623333868222,"results":"30","hashOfConfig":"24"},{"size":180,"mtime":1620654218577,"results":"31","hashOfConfig":"24"},{"size":4401,"mtime":1620654218573,"results":"32","hashOfConfig":"24"},{"size":1397,"mtime":1621739114648,"results":"33","hashOfConfig":"24"},{"size":448,"mtime":1620654218573,"results":"34","hashOfConfig":"24"},{"size":2111,"mtime":1623084211279,"results":"35","hashOfConfig":"24"},{"size":1648,"mtime":1622076232626,"results":"36","hashOfConfig":"24"},{"size":4732,"mtime":1623084249410,"results":"37","hashOfConfig":"24"},{"size":1612,"mtime":1623505713858,"results":"38","hashOfConfig":"24"},{"size":3390,"mtime":1620654218573,"results":"39","hashOfConfig":"24"},{"size":355,"mtime":1620654218577,"results":"40","hashOfConfig":"24"},{"size":2739,"mtime":1623083484983,"results":"41","hashOfConfig":"24"},{"size":2165,"mtime":1621638418455,"results":"42","hashOfConfig":"24"},{"size":3267,"mtime":1623505069733,"results":"43","hashOfConfig":"24"},{"size":1270,"mtime":1623331207946,"results":"44","hashOfConfig":"24"},{"size":12048,"mtime":1623503987380,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"lpveh0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/index.js",[],["96","97"],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/reportWebVitals.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/routes/Routes.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/apis/firebase.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/App.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Home.js",["98","99"],"import React from 'react'\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport Login from './Firebase_Login';\nimport Menu from './Menu';\nimport {auth} from '../apis/firebase'\nimport Loading from '../components/Loading';\nimport RatingPage from './RatingPage';\nimport Acceptance from './Acceptance';\n\n\nconst Home =()=>{\n    const [user, loading] = useAuthState(auth);\n    if(!user&&loading){\n        return <Loading/>\n    }\n\n    return(\n        <>{user?<Acceptance/>:<Login/>}\n        </>\n    );\n}\nexport default Home;","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/RatingPage.js",["100","101"],"import \"react-toastify/dist/ReactToastify.css\";\nimport { auth } from \"../apis/firebase\";\nimport NavBar from \"../components/navBar\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { db } from \"../apis/firebase\";\nimport MessageSlider from \"../components/MessageSlider\";\nimport { useEffect, useState } from \"react\";\nimport { Alert,Modal,Button, Card } from \"react-bootstrap\";\n\nconst RatingPage = () => {\n  const [user, loading, error] = useAuthState(auth);\n  const [messages, setmessages] = useState([]);\n  const [registred, setregistred] = useState(false);\n  const [done, setdone] = useState(false);\n  const [lgShow, setLgShow] = useState(true);                    \n\n \n\n  const getData = async () => {\n    const dictio_type={\n      'Com':\"Commitment\",\n      'Lik':\"Liking\",\n      'Con':\"Consistency\",\n    }\n    const msgs = [];\n    let codes={};\n    \n    if (user != null){\n      await db.collection(\"Participant\").where(\"email\", \"==\", user.email).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            // console.log(doc.id, \" => \", doc.data());\n        // console.log(doc.data())\n        \n          codes=doc.data()\n          });\n        \n      })\n      .catch((error) => {\n          console.log(\"Error getting documents: \", error);\n      });\n    }else{\n      return;\n    }\n    \n    if(codes.empty){\n      setregistred('Usted No esta registrado para esta evaluacion')\n      return ;\n    }else{\n      setdone(codes.done)\n    }\n    var messages_1 = await db.collection(dictio_type[codes['code_1'].substring(0,3)]).where(\"group_code\", \"==\", codes['code_1']).get()\n    messages_1.forEach((element) => {\n      msgs.push({ ...element.data(), id: element.id });\n      //console.log({...element.data(),id:element.id});\n    });\n    var messages_2 = await db.collection(dictio_type[codes['code_2'].substring(0,3)]).where(\"group_code\", \"==\", codes['code_2']).get()\n    messages_2.forEach((element) => {\n      msgs.push({ ...element.data(), id: element.id });\n      //console.log({...element.data(),id:element.id});\n    });\n    \n    var messages_3 = await db.collection(dictio_type[codes['code_3'].substring(0,3)]).where(\"group_code\", \"==\", codes['code_3']).get()\n    messages_3.forEach((element) => {\n      msgs.push({ ...element.data(), id: element.id });\n      //console.log({...element.data(),id:element.id});\n    });\n    setmessages(msgs);\n    \n\n  };\n\n\n  useEffect(() => {\n    console.log('obteniendo data');\n    getData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n  \n\n  return (\n    <>\n      <NavBar />\n      <div className=\"container mt-4\">\n        {/* <div className=\"alert alert-dismissible alert-success\" >\n          <strong>Instruciones!</strong> Aqui den ir las intrucciones y una\n          breve explicacion de las metricas a usar\n        </div> */}\n        <Button variant='info' className='mb-2' onClick={() => setLgShow(true)}>Information</Button>\n        \n        <Alert variant='danger' show={registred}>\n        {registred}</Alert>\n        <Alert variant='success' show={done}>\n        Thank you for your cooperation, your rating has been sent</Alert>\n        {((!registred) && (!done)&&user)?<MessageSlider slides={messages} setdata={setmessages} email={user.email}/>:null}\n        \n\n        {/* ------------------------------Modal information-------------------- */}\n        <Modal\n          size=\"lg\"\n          show={lgShow}\n          onHide={() => setLgShow(false)}\n          aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\n              WELCOME!\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Card\n            className=\"mb-2 mt-2 \"\n          >\n            <Card.Header className='h5'>Goals</Card.Header>\n            <Card.Body>\n              <Card.Text className='h5'>\n                \n              <p>\n              In our research we seek to generate messages / persuasive text automatically with the help of Neural Networks more specifically (GAN) classified in 3 persuasion principles.\n              </p>\n              <p>\n              The objective of this experiment is the evaluation of the quality of the generated text, testing the understandability of the text and the correct assignment of its classification.\n              </p>\n              <p>\n              Through this study you will be able to participate by rating intelligibility and if classification taking into account 3 principles of persuasion. \n              </p> \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <Card\n            bg='info'\n            className=\"mb-2 mt-2 \"\n          >\n            <Card.Header className='h5'>Context of the Training Corpus</Card.Header>\n            <Card.Body>\n              <Card.Text className='h5'>\n              The dataset we use for training is a collection of hostage negotiation transcripts cataloged in the principles of cialdini.\n                  <br></br>\n                  <small>A Microtext Corpus for Persuasion Detection in Dialog(2011),Young, Joel, et al</small>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <Card\n            bg='success'\n            className=\"mb-2 mt-2\"\n          >\n            <Card.Header className='h5'>Cialdini's Principles of Persuasion</Card.Header>\n            <Card.Body>\n              <Card.Text className='h5'>\n                <ul>\n                  <li><strong>Commitment</strong> (Compromiso):\n                  People tend to be consistent in what they have said, written or committed.\n                    \n                    <ol >\n                    <smal>Examples:</smal>\n                    <li>well they arent gonna hurt you if you just come on out</li>\n                    <li>aint nobody gonna get hurt unless they storm this son of a gun and then</li>\n                    </ol>\n                  </li>\n                  <br></br>\n                  <li><strong>Liking</strong> (Simpatia):\n                  People prefer to say \"yes\" to those for whom they have sympathy, good vibes or like.\n                    <ol >\n                      <smal>Examples:</smal>\n                      <li>i dont know {\"<name>\"} honey after this you can talk to your mother all day</li>\n                      <li>i see well thats youre held a pretty important position</li>\n                      </ol>\n                    </li>\n                  <br></br>\n                  <li><strong>Consistency</strong> (Consistencia):\n                  People tend to follow those who show consistency in their words or who are proficient in a topic.\n                  <ol >\n                      <smal>Examples:</smal>\n                      <li>well you know you dont really hurt yourself you hurt all the people that love you</li>\n                      <li>sure he got the easy way out but you know you hurt people by don it.</li>\n                      </ol>\n                    \n                  </li>\n                </ul>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={() => setLgShow(false)}>OK!</Button>\n          </Modal.Footer>\n        </Modal>  \n      </div>\n      \n    </>\n  );\n};\n\nexport default RatingPage;\n","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/NotFound.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/Messages.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/navBar.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/Loading.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Firebase_Login.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Menu.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/MessageSlider.js",["102"],"import React, { useState } from \"react\";\nimport {FaCloudUploadAlt, FaArrowAltCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\nimport RateStaring from \"./RateStaring\";\nimport RateType from \"./RateType\";\nimport Loading from \"./Loading\";\nimport {Form, Row, Col, Button, Alert} from 'react-bootstrap'\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport { db } from \"../apis/firebase\";\n\n\nconst MessageSlider = (props) => {\n  const [current, setcurrent] = useState(0);\n  const [answersstars, setanswersstars] = useState({});\n  const [answerstype, setanswerstype] = useState({});\n  const [answertext, setanswertext] = useState({});\n  const length = props.slides.length;\n\n  const handlechange = (e,index) => {\n    e.preventDefault();\n    setanswertext({...answertext,[index]:e.target.value})\n  };\n  const nextSlide = () => {\n    setcurrent(current === length - 1 ? length - 1 : current + 1);\n  };\n  const prevSlide = () => {\n    setcurrent(current === 0 ? 0 : current - 1);\n  };\n\n  if (!Array.isArray(props.slides) || props.slides.length <= 0) {\n    return <Loading/>;\n  }\n\n  const send_my_form=async()=>{\n    const dictio_type={\n      'Com':\"Commitment\",\n      'Lik':\"Liking\",\n      'Con':\"Consistency\",\n    }\n    if(Object.entries(answersstars).length===15 && Object.entries(answerstype).length===15){\n      props.slides.map(async(msg, index)=>{\n        let respuestas={\n          'email': props.email,\n          'inteligility': answersstars[index],\n          'typeacuracy':answerstype[index],\n          'message_update':(answertext[index]?answertext[index]:false),\n        }\n        \n\n        const docref= await db.collection(dictio_type[msg.group_code.substring(0,3)]).doc(msg.id)\n        \n        await docref.get().then((doc)=>{\n          console.log(doc.data())\n          if(!('rating_1' in  doc.data())){\n            docref.update({\n              rating_1:respuestas\n            })\n          }else{\n            docref.update({\n              rating_2:respuestas\n            })\n          }\n        })\n        \n        await db.collection(\"Participant\").where(\"email\", \"==\", props.email).limit(1).get().then((query) => {  \n          const thing = query.docs[0];\n          thing.ref.update({done:true});\n        });\n           \n      })\n\n      toast.success(\"Gracias por participar con nosotros\", {\n        onOpen: props => console.log('gracias'),\n        onClose: props => window.location.reload(),\n        autoClose: 4000,\n        \n    }); \n    }else{\n      console.log('aun no llenaste todos los campos '+ Object.entries(answersstars).length +' '+ Object.entries(answerstype).length)\n      toast.warn(\"Aun no llenaste todos los campos!\")\n    }\n  }\n\n\n  return (\n    <section className=\"card card-body\">\n      \n      {props.slides.map((msg, index) => {\n        return (\n            <div\n              className={index === current ? \"card card-body border-white\" : \" d-none\"}\n              key={index}  \n            >\n              Message {index + 1}:\n              <div className=\"alert alert-dismissible  alert-light\">\n                <h3><em>{msg[\"message\"]}</em></h3>\n              </div>\n              <RateStaring  menssage={answersstars} id={index} send_data={setanswersstars}/>\n              <RateType menssage={answerstype} id={index} send_data={setanswerstype}/>\n              <Form>\n                <Form.Group as={Row}>\n                  <Form.Label column sm={4}>\n                  If you consider that the message can be clearer, leave us your proposal (Optional)\n                  </Form.Label>\n                  <Col sm={8}>\n                    <Form.Control name=\"textarea\"  onChange={(e)=>{handlechange(e,index)}}  placeholder=\"Mensaje\" />\n                  </Col>\n                </Form.Group>\n              </Form>\n            </div>\n        );\n      })}\n      \n      <div >\n      \n      <Button \n      className={current === 0?'d-none':'float-left mt-3'}\n      onClick={prevSlide}>\n        <FaArrowAltCircleLeft\n          size=\"40\"\n        />\n          <p className=\"m-5 d-inline\">Previous</p>\n        </Button> \n        \n        <Button         \n          onClick={nextSlide}\n          className={current === length - 1?'d-none':'float-right mt-3'}>\n            <p className=\"m-5 d-inline\">Next</p>\n            <FaArrowAltCircleRight\n            size=\"40\"\n          />  \n        </Button> \n        \n      </div>\n      <Button \n        variant='success'\n        className=\"mx-auto d-block mt-3\"\n        onClick={send_my_form}>\n          \n          <FaCloudUploadAlt\n          size=\"40\"\n        />\n          <p className=\"m-3 d-inline\">Submit Ratings</p>\n        </Button>\n        \n      <ToastContainer/>\n    </section>\n  );\n};\n\nexport default MessageSlider;\n","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/RateStaring.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/MessageForm.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/singOut.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/components/RateType.js",[],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/RatingPage2.js",["103"],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/Acceptance.js",["104","105"],"/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/FeedBack.js",["106"],"import React from 'react'\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport {auth} from '../apis/firebase'\nimport Loading from '../components/Loading';\nimport NavBar from '../components/navBar';\nimport {Form, Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\n\nconst FeedBack =()=>{\n    const [user, loading] = useAuthState(auth);\n    if(!user&&loading){\n        return <Loading/>\n    }\n\n    return(\n        <><NavBar />\n            <div className=\"container mt-4 pb-5\">\n                <h3 className=\"mt-4 d-flex justify-content-center\">Thanks for your contribution!</h3>\n                <h4 className=\"mb-4 mt-4\">Feedback</h4>\n                <Form className=\"m-4\">\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label className='h5'>a. Please let me know if you have any suggestions or comments.</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} />\n                    </Form.Group>\n                    \n\n                        <Link to=\"/ratingpage\" className=\"btn btn-success btn-lg  btn-block rounded-pill mt-5\">Submit</Link>\n\n                </Form>\n                \n            </div>\n        </>\n    );\n}\nexport default FeedBack;","/home/edson/Tesis/Module-of-evaluation-and-refinement/myapp/src/pages/DemogForm.js",["107","108","109","110","111"],"import React, { useState } from 'react'\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport {auth} from '../apis/firebase'\nimport Loading from '../components/Loading';\nimport NavBar from '../components/navBar';\nimport {Form, Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\nimport { db } from \"../apis/firebase\";\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\n\nconst DemogForm =()=>{\n    const [user, loading] = useAuthState(auth);\n    const data = {\n        ageGroup:\"\",\n        genderGroup:\"\",\n        writtenGroup:\"\",\n        spokenGroup:\"\",\n        };\n    const [form, setForm] = useState(data);\n\n    const onValueChange=(event) =>{\n        event.persist();\n        setForm({...form,[event.target.name]:event.target.value});\n    }\n    const Submit=async(event)=>{\n        \n        if(form.ageGroup!=\"\" &&\n        form.genderGroup!=\"\" &&\n        form.writtenGroup!=\"\"&&\n        form.spokenGroup!=\"\")\n        {   console.log(user.email)\n            await db.collection(\"Participant\").where(\"email\", \"==\", user.email).limit(1).get().then((query) => {  \n                const thing = query.docs[0];\n                thing.ref.update(form);\n              });\n\n        }else{\n            console.log('no permitido')\n\n            toast.warn(\"Aun no llenaste todos los campos!\")\n\n            event.preventDefault();\n                \n        }\n    }\n    if(!user&&loading){\n        return <Loading/>\n    }\n    \n    return(\n        <><NavBar />\n            <div className=\"container mt-4 pb-5\">\n                <h3 className=\"mt-4 d-flex justify-content-center\">Welcome to our live study!</h3>\n                <h4 className=\"mb-4 mt-4\">Demographic Questionnaire</h4>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>a. What is your age group?</Form.Label>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"18 - 25\"\n                            name=\"ageGroup\"\n                            value=\"18 - 25\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"26 - 35\"\n                            name=\"ageGroup\"\n                            value=\"26 - 35\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"36 - 45\"\n                            name=\"ageGroup\"\n                            value=\"36 - 45\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"46 - 55\"\n                            name=\"ageGroup\"\n                            value=\"46 - 55\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"60 or more\"\n                            name=\"ageGroup\"\n                            value=\"60 or more\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>b. What is your gender?</Form.Label>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Female\"\n                            name=\"genderGroup\"\n                            value=\"Female\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Male\"\n                            name=\"genderGroup\"\n                            value=\"Male\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Prefer not to say\"\n                            name=\"genderGroup\"\n                            value=\"Prefer not to say\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Other\"\n                            name=\"genderGroup\"\n                            value=\"Other\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>c. What is your written English level?</Form.Label>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Beginner\"\n                            name=\"writtenGroup\"\n                            value=\"Beginner\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Elementary English\"\n                            name=\"writtenGroup\"\n                            value=\"Elementary English\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Intermediate English\"\n                            name=\"writtenGroup\"\n                            value=\"Intermediate English\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Upper-Intermediate\"\n                            name=\"writtenGroup\"\n                            value=\"Upper-Intermediate\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Advanced English\"\n                            name=\"writtenGroup\"\n                            value=\"Advanced English\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Proficiency\"\n                            name=\"writtenGroup\"\n                            value=\"Proficiency\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>c. What is your spoken English level?</Form.Label>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Beginner\"\n                            name=\"spokenGroup\"\n                            value=\"Beginner\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Elementary English\"\n                            name=\"spokenGroup\"\n                            value=\"Elementary English\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Intermediate English\"\n                            name=\"spokenGroup\"\n                            value=\"Intermediate English\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Upper-Intermediate\"\n                            name=\"spokenGroup\"\n                            value=\"Upper-Intermediate\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Advanced English\"\n                            name=\"spokenGroup\"\n                            value=\"Advanced English\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>\n                        <Form.Check \n                            className='m-3'\n                            type=\"radio\"\n                            label=\"Proficiency\"\n                            name=\"spokenGroup\"\n                            value=\"Proficiency\"\n                            //checked={select==='Commitment'}\n                            onChange={onValueChange}\n                            id=\"formHorizontalRadios1\"/>        \n                    </Form.Group>\n                    \n                        <Link onClick={Submit} to=\"/ratingpage\" className=\"btn btn-success btn-lg  btn-block rounded-pill mt-5 \">Submit</Link>\n\n                </Form>\n                <ToastContainer/>\n            </div>\n        </>\n    );\n}\nexport default DemogForm;",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":12},{"ruleId":"116","severity":1,"message":"120","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":18},{"ruleId":"116","severity":1,"message":"121","line":11,"column":16,"nodeType":"118","messageId":"119","endLine":11,"endColumn":23},{"ruleId":"116","severity":1,"message":"122","line":11,"column":25,"nodeType":"118","messageId":"119","endLine":11,"endColumn":30},{"ruleId":"116","severity":1,"message":"123","line":6,"column":33,"nodeType":"118","messageId":"119","endLine":6,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":46,"column":11,"nodeType":"126","endLine":46,"endColumn":42},{"ruleId":"116","severity":1,"message":"127","line":6,"column":15,"nodeType":"118","messageId":"119","endLine":6,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":25,"column":27,"nodeType":"130","messageId":"131","endLine":25,"endColumn":29},{"ruleId":"116","severity":1,"message":"127","line":6,"column":15,"nodeType":"118","messageId":"119","endLine":6,"endColumn":21},{"ruleId":"116","severity":1,"message":"127","line":6,"column":15,"nodeType":"118","messageId":"119","endLine":6,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":28,"column":25,"nodeType":"130","messageId":"131","endLine":28,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":29,"column":25,"nodeType":"130","messageId":"131","endLine":29,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":30,"column":26,"nodeType":"130","messageId":"131","endLine":30,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":31,"column":25,"nodeType":"130","messageId":"131","endLine":31,"endColumn":27},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'RatingPage' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Alert' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]